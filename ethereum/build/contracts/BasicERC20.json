{
  "contractName": "BasicERC20",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
<<<<<<< HEAD
  "bytecode": "0x6080604052601260055534801561001557600080fd5b50604051610b12380380610b12833981018060405281019080805182019291906020018051820192919060200180519060200190929190505050600033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600554600a0a820290508060018190555083600390805190602001906100b992919061016d565b5082600490805190602001906100d092919061016d565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505050610212565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ae57805160ff19168380011785556101dc565b828001600101855582156101dc579182015b828111156101db5782518255916020019190600101906101c0565b5b5090506101e991906101ed565b5090565b61020f91905b8082111561020b5760008160009055506001016101f3565b5090565b90565b6108f1806102216000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a08231146101795780638da5cb5b146101d057806395d89b4114610227578063a9059cbb146102b7578063f2fde38b1461031c575b600080fd5b34801561009f57600080fd5b506100a861035f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b506101386103fd565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610407565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b506101ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040d565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b506101e5610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c61047b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027c578082015181840152602081019050610261565b50505050905090810190601f1680156102a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c357600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b6000600154905090565b60055481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561055657600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105a357600080fd5b6105f4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089090919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610687826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108a990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107d057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561089e57fe5b818303905092915050565b600081830190508281101515156108bc57fe5b809050929150505600a165627a7a72305820c36a76fe94900b227a415242b2ea9111f70d39a36c60f4d59e3577835e900bf60029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a08231146101795780638da5cb5b146101d057806395d89b4114610227578063a9059cbb146102b7578063f2fde38b1461031c575b600080fd5b34801561009f57600080fd5b506100a861035f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b506101386103fd565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610407565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b506101ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040d565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b506101e5610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c61047b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027c578082015181840152602081019050610261565b50505050905090810190601f1680156102a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c357600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b6000600154905090565b60055481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561055657600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105a357600080fd5b6105f4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089090919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610687826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108a990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107d057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561089e57fe5b818303905092915050565b600081830190508281101515156108bc57fe5b809050929150505600a165627a7a72305820c36a76fe94900b227a415242b2ea9111f70d39a36c60f4d59e3577835e900bf60029",
  "sourceMap": "94:498:5:-;;;224:2;198:28;;235:354;8:9:-1;5:2;;;30:1;27;20:12;5:2;235:354:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:22;539:10:12;531:5;;:18;;;;;;;;;;;;;;;;;;376:8:5;;362:2;:23;344:14;:42;319:67;;412:14;397:12;:29;;;;444:5;437:4;:12;;;;;;;;;;;;:::i;:::-;;469:7;460:6;:16;;;;;;;;;;;;:::i;:::-;;510:14;487:8;:20;496:10;487:20;;;;;;;;;;;;;;;:37;;;;554:10;540:41;;549:3;540:41;566:14;540:41;;;;;;;;;;;;;;;;;;235:354;;;;94:498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "94:498:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;146:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;146:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;404:91:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:91:0;;;;;;;;;;;;;;;;;;;;;;;198:28:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;198:28:5;;;;;;;;;;;;;;;;;;;;;;;1244:107:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1244:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;171::5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;171:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:355:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:355:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:192:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;902:192:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;404:91:0:-;448:7;475:12;;468:19;;404:91;:::o;198:28:5:-;;;;:::o;1244:107:0:-;1300:7;1327:8;:16;1336:6;1327:16;;;;;;;;;;;;;;;;1320:23;;1244:107;;;:::o;249:20:12:-;;;;;;;;;;;;;:::o;171::5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;668:355:0:-;731:4;771:1;756:17;;:3;:17;;;;748:26;;;;;;;;803:8;:20;812:10;803:20;;;;;;;;;;;;;;;;793:6;:30;;785:39;;;;;;;;860:32;885:6;860:8;:20;869:10;860:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;837:8;:20;846:10;837:20;;;;;;;;;;;;;;;:55;;;;919:25;937:6;919:8;:13;928:3;919:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;903:8;:13;912:3;903:13;;;;;;;;;;;;;;;:41;;;;981:3;960:33;;969:10;960:33;;;986:6;960:33;;;;;;;;;;;;;;;;;;1011:4;1004:11;;668:355;;;;:::o;902:192:12:-;702:5;;;;;;;;;;;688:19;;:10;:19;;;680:28;;;;;;;;1003:1;983:22;;:8;:22;;;;975:31;;;;;;;;1050:8;1022:37;;1043:5;;;;;;;;;;;1022:37;;;;;;;;;;;;1078:8;1070:5;;:16;;;;;;;;;;;;;;;;;;902:192;:::o;922:123:13:-;980:7;1012:1;1007;:6;;1000:14;;;;;;1036:1;1032;:5;1025:12;;922:123;;;;:::o;1114:141::-;1172:9;1202:1;1198;:5;1194:9;;1226:1;1221;:6;;1214:14;;;;;;1246:1;1239:8;;1114:141;;;;:::o",
  "source": "pragma solidity 0.4.24;\r\n\r\nimport \"../BasicToken.sol\"; \r\nimport \"../../utils/Ownable.sol\";\r\n\r\ncontract BasicERC20 is BasicToken, Ownable {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public decimals = 18;\r\n\r\n    constructor(string _name, string _symbol, uint256 _initialSupply) public {\r\n        uint256 INITIAL_SUPPLY = _initialSupply * (10 ** uint256(decimals));\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n        emit Transfer(0x0, msg.sender, INITIAL_SUPPLY);\r\n    }\r\n}",
=======
  "bytecode": "0x6080604052601260045534801561001557600080fd5b50604051610b12380380610b12833981018060405281019080805182019291906020018051820192919060200180519060200190929190505050600033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600454600a0a820290508060018190555083600290805190602001906100b992919061016d565b5082600390805190602001906100d092919061016d565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505050610212565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ae57805160ff19168380011785556101dc565b828001600101855582156101dc579182015b828111156101db5782518255916020019190600101906101c0565b5b5090506101e991906101ed565b5090565b61020f91905b8082111561020b5760008160009055506001016101f3565b5090565b90565b6108f1806102216000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a08231146101795780638da5cb5b146101d057806395d89b4114610227578063a9059cbb146102b7578063f2fde38b1461031c575b600080fd5b34801561009f57600080fd5b506100a861035f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b506101386103fd565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610407565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b506101ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040d565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b506101e5610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c61047b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027c578082015181840152602081019050610261565b50505050905090810190601f1680156102a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c357600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b6000600154905090565b60045481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561055657600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105a357600080fd5b6105f4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089090919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610687826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108a990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107d057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561089e57fe5b818303905092915050565b600081830190508281101515156108bc57fe5b809050929150505600a165627a7a72305820c71aa602c5b8f64377674156f241ca345ec0bee1a0f99c4f128097d3edc9b4670029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a08231146101795780638da5cb5b146101d057806395d89b4114610227578063a9059cbb146102b7578063f2fde38b1461031c575b600080fd5b34801561009f57600080fd5b506100a861035f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b506101386103fd565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610407565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b506101ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061040d565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b506101e5610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c61047b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027c578082015181840152602081019050610261565b50505050905090810190601f1680156102a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c357600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b34801561032857600080fd5b5061035d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b6000600154905090565b60045481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561055657600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105a357600080fd5b6105f4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089090919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610687826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108a990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107d057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561089e57fe5b818303905092915050565b600081830190508281101515156108bc57fe5b809050929150505600a165627a7a72305820c71aa602c5b8f64377674156f241ca345ec0bee1a0f99c4f128097d3edc9b4670029",
  "sourceMap": "96:412:4:-;;;218:2:5;192:28;;151:354:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;151:354:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:22;539:10:10;531:5;;:18;;;;;;;;;;;;;;;;;;292:8:4;;278:2;:23;260:14;:42;235:67;;328:14;313:12;:29;;;;360:5;353:4;:12;;;;;;;;;;;;:::i;:::-;;385:7;376:6;:16;;;;;;;;;;;;:::i;:::-;;426:14;403:8;:20;412:10;403:20;;;;;;;;;;;;;;;:37;;;;470:10;456:41;;465:3;456:41;482:14;456:41;;;;;;;;;;;;;;;;;;151:354;;;;96:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "96:412:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;140:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;404:91:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:91:0;;;;;;;;;;;;;;;;;;;;;;;192:28:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;192:28:5;;;;;;;;;;;;;;;;;;;;;;;1244:107:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1244:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:20:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;165::5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;165:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:355:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:355:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:192:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;902:192:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;404:91:0:-;448:7;475:12;;468:19;;404:91;:::o;192:28:5:-;;;;:::o;1244:107:0:-;1300:7;1327:8;:16;1336:6;1327:16;;;;;;;;;;;;;;;;1320:23;;1244:107;;;:::o;249:20:10:-;;;;;;;;;;;;;:::o;165::5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;668:355:0:-;731:4;771:1;756:17;;:3;:17;;;;748:26;;;;;;;;803:8;:20;812:10;803:20;;;;;;;;;;;;;;;;793:6;:30;;785:39;;;;;;;;860:32;885:6;860:8;:20;869:10;860:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;837:8;:20;846:10;837:20;;;;;;;;;;;;;;;:55;;;;919:25;937:6;919:8;:13;928:3;919:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;903:8;:13;912:3;903:13;;;;;;;;;;;;;;;:41;;;;981:3;960:33;;969:10;960:33;;;986:6;960:33;;;;;;;;;;;;;;;;;;1011:4;1004:11;;668:355;;;;:::o;902:192:10:-;702:5;;;;;;;;;;;688:19;;:10;:19;;;680:28;;;;;;;;1003:1;983:22;;:8;:22;;;;975:31;;;;;;;;1050:8;1022:37;;1043:5;;;;;;;;;;;1022:37;;;;;;;;;;;;1078:8;1070:5;;:16;;;;;;;;;;;;;;;;;;902:192;:::o;922:123:11:-;980:7;1012:1;1007;:6;;1000:14;;;;;;1036:1;1032;:5;1025:12;;922:123;;;;:::o;1114:141::-;1172:9;1202:1;1198;:5;1194:9;;1226:1;1221;:6;;1214:14;;;;;;1246:1;1239:8;;1114:141;;;;:::o",
  "source": "pragma solidity 0.4.24;\r\n\r\nimport \"./DetailedERC20.sol\"; \r\nimport \"../../utils/Ownable.sol\";\r\n\r\ncontract BasicERC20 is DetailedERC20, Ownable {\r\n\r\n    constructor(string _name, string _symbol, uint256 _initialSupply) public {\r\n        uint256 INITIAL_SUPPLY = _initialSupply * (10 ** uint256(decimals));\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n        emit Transfer(0x0, msg.sender, INITIAL_SUPPLY);\r\n    }\r\n}",
>>>>>>> master
  "sourcePath": "E:\\Ethereum\\TokenCreator\\ethereum\\contracts\\ERC20\\flavors\\BasicERC20.sol",
  "ast": {
    "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/ERC20/flavors/BasicERC20.sol",
    "exportedSymbols": {
      "BasicERC20": [
        472
      ]
    },
    "id": 473,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 418,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/ERC20/flavors/DetailedERC20.sol",
        "file": "./DetailedERC20.sol",
        "id": 419,
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 487,
        "src": "27:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/utils/Ownable.sol",
        "file": "../../utils/Ownable.sol",
        "id": 420,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 542,
        "sourceUnit": 1488,
        "src": "57:33:5",
=======
        "scope": 473,
        "sourceUnit": 1119,
        "src": "59:33:4",
>>>>>>> master
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 421,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 486,
              "src": "119:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$486",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "119:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 423,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 1487,
              "src": "129:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1487",
=======
              "referencedDeclaration": 1118,
              "src": "134:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1118",
>>>>>>> master
                "typeString": "contract Ownable"
              }
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "134:7:4"
          }
        ],
        "contractDependencies": [
          1487,
          95,
<<<<<<< HEAD
          170
=======
          170,
          486,
          1118
>>>>>>> master
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 472,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          541,
          1487,
=======
          472,
          1118,
          486,
>>>>>>> master
          95,
          170
        ],
        "name": "BasicERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "constant": false,
            "id": 488,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "146:18:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 487,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "146:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 490,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "171:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "171:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 493,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "198:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 492,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "224:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
=======
>>>>>>> master
            "body": {
              "id": 470,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "308:281:5",
=======
              "src": "224:281:4",
>>>>>>> master
              "statements": [
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 540,
                      "src": "319:22:5",
=======
                      "scope": 471,
                      "src": "235:22:4",
>>>>>>> master
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "319:7:5",
=======
                        "src": "235:7:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 435,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 499,
                      "src": "344:14:5",
=======
                      "referencedDeclaration": 430,
                      "src": "260:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "362:2:5",
=======
                            "src": "278:2:4",
>>>>>>> master
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 438,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 493,
                                "src": "376:8:5",
=======
                                "referencedDeclaration": 485,
                                "src": "292:8:4",
>>>>>>> master
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "368:7:5",
=======
                              "src": "284:7:4",
>>>>>>> master
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "368:17:5",
=======
                            "src": "284:17:4",
>>>>>>> master
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "362:23:5",
=======
                          "src": "278:23:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 441,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
<<<<<<< HEAD
                      "src": "361:25:5",
=======
                      "src": "277:25:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "344:42:5",
=======
                    "src": "260:42:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "319:67:5"
=======
                  "src": "235:67:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
<<<<<<< HEAD
                      "src": "397:12:5",
=======
                      "src": "313:12:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 503,
                      "src": "412:14:5",
=======
                      "referencedDeclaration": 434,
                      "src": "328:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "397:29:5",
=======
                    "src": "313:29:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "397:29:5"
=======
                  "src": "313:29:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 448,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 488,
                      "src": "437:4:5",
=======
                      "referencedDeclaration": 480,
                      "src": "353:4:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 449,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 495,
                      "src": "444:5:5",
=======
                      "referencedDeclaration": 426,
                      "src": "360:5:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "437:12:5",
=======
                    "src": "353:12:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "437:12:5"
=======
                  "src": "353:12:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 490,
                      "src": "460:6:5",
=======
                      "referencedDeclaration": 482,
                      "src": "376:6:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 497,
                      "src": "469:7:5",
=======
                      "referencedDeclaration": 428,
                      "src": "385:7:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "460:16:5",
=======
                    "src": "376:16:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "460:16:5"
=======
                  "src": "376:16:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
<<<<<<< HEAD
                        "src": "487:8:5",
=======
                        "src": "403:8:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1596,
                          "src": "496:3:5",
=======
                          "referencedDeclaration": 1227,
                          "src": "412:3:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "496:10:5",
=======
                        "src": "412:10:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "487:20:5",
=======
                      "src": "403:20:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 503,
                      "src": "510:14:5",
=======
                      "referencedDeclaration": 434,
                      "src": "426:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "487:37:5",
=======
                    "src": "403:37:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "487:37:5"
=======
                  "src": "403:37:4"
>>>>>>> master
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "549:3:5",
=======
                        "src": "465:3:4",
>>>>>>> master
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1596,
                          "src": "554:3:5",
=======
                          "referencedDeclaration": 1227,
                          "src": "470:3:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "554:10:5",
=======
                        "src": "470:10:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 467,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 503,
                        "src": "566:14:5",
=======
                        "referencedDeclaration": 434,
                        "src": "482:14:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 463,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
<<<<<<< HEAD
                      "src": "540:8:5",
=======
                      "src": "456:8:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "540:41:5",
=======
                    "src": "456:41:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "535:46:5"
=======
                  "src": "451:46:4"
>>>>>>> master
                }
              ]
            },
            "documentation": null,
            "id": 471,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "247:12:5",
=======
                  "scope": 471,
                  "src": "163:12:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "247:6:5",
=======
                    "src": "163:6:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "261:14:5",
=======
                  "scope": 471,
                  "src": "177:14:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "261:6:5",
=======
                    "src": "177:6:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "277:22:5",
=======
                  "scope": 471,
                  "src": "193:22:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "277:7:5",
=======
                    "src": "193:7:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "246:54:5"
=======
              "src": "162:54:4"
>>>>>>> master
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "308:0:5"
            },
            "scope": 541,
            "src": "235:354:5",
=======
              "src": "224:0:4"
            },
            "scope": 472,
            "src": "151:354:4",
>>>>>>> master
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 542,
        "src": "94:498:5"
      }
    ],
    "src": "0:592:5"
=======
        "scope": 473,
        "src": "96:412:4"
      }
    ],
    "src": "0:508:4"
>>>>>>> master
  },
  "legacyAST": {
    "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/ERC20/flavors/BasicERC20.sol",
    "exportedSymbols": {
      "BasicERC20": [
        472
      ]
    },
    "id": 473,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 418,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/ERC20/flavors/DetailedERC20.sol",
        "file": "./DetailedERC20.sol",
        "id": 419,
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 487,
        "src": "27:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Ethereum/TokenCreator/ethereum/contracts/utils/Ownable.sol",
        "file": "../../utils/Ownable.sol",
        "id": 420,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 542,
        "sourceUnit": 1488,
        "src": "57:33:5",
=======
        "scope": 473,
        "sourceUnit": 1119,
        "src": "59:33:4",
>>>>>>> master
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 421,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 486,
              "src": "119:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$486",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "119:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 423,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 1487,
              "src": "129:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1487",
=======
              "referencedDeclaration": 1118,
              "src": "134:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1118",
>>>>>>> master
                "typeString": "contract Ownable"
              }
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "134:7:4"
          }
        ],
        "contractDependencies": [
          1487,
          95,
<<<<<<< HEAD
          170
=======
          170,
          486,
          1118
>>>>>>> master
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 472,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          541,
          1487,
=======
          472,
          1118,
          486,
>>>>>>> master
          95,
          170
        ],
        "name": "BasicERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "constant": false,
            "id": 488,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "146:18:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 487,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "146:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 490,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "171:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "171:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 493,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "198:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 492,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "224:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
=======
>>>>>>> master
            "body": {
              "id": 470,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "308:281:5",
=======
              "src": "224:281:4",
>>>>>>> master
              "statements": [
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 540,
                      "src": "319:22:5",
=======
                      "scope": 471,
                      "src": "235:22:4",
>>>>>>> master
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "319:7:5",
=======
                        "src": "235:7:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 435,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 499,
                      "src": "344:14:5",
=======
                      "referencedDeclaration": 430,
                      "src": "260:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "362:2:5",
=======
                            "src": "278:2:4",
>>>>>>> master
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 438,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 493,
                                "src": "376:8:5",
=======
                                "referencedDeclaration": 485,
                                "src": "292:8:4",
>>>>>>> master
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "368:7:5",
=======
                              "src": "284:7:4",
>>>>>>> master
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "368:17:5",
=======
                            "src": "284:17:4",
>>>>>>> master
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "362:23:5",
=======
                          "src": "278:23:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 441,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
<<<<<<< HEAD
                      "src": "361:25:5",
=======
                      "src": "277:25:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "344:42:5",
=======
                    "src": "260:42:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "319:67:5"
=======
                  "src": "235:67:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
<<<<<<< HEAD
                      "src": "397:12:5",
=======
                      "src": "313:12:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 503,
                      "src": "412:14:5",
=======
                      "referencedDeclaration": 434,
                      "src": "328:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "397:29:5",
=======
                    "src": "313:29:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "397:29:5"
=======
                  "src": "313:29:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 448,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 488,
                      "src": "437:4:5",
=======
                      "referencedDeclaration": 480,
                      "src": "353:4:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 449,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 495,
                      "src": "444:5:5",
=======
                      "referencedDeclaration": 426,
                      "src": "360:5:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "437:12:5",
=======
                    "src": "353:12:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "437:12:5"
=======
                  "src": "353:12:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 490,
                      "src": "460:6:5",
=======
                      "referencedDeclaration": 482,
                      "src": "376:6:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 497,
                      "src": "469:7:5",
=======
                      "referencedDeclaration": 428,
                      "src": "385:7:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "460:16:5",
=======
                    "src": "376:16:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "460:16:5"
=======
                  "src": "376:16:4"
>>>>>>> master
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
<<<<<<< HEAD
                        "src": "487:8:5",
=======
                        "src": "403:8:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1596,
                          "src": "496:3:5",
=======
                          "referencedDeclaration": 1227,
                          "src": "412:3:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "496:10:5",
=======
                        "src": "412:10:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "487:20:5",
=======
                      "src": "403:20:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 503,
                      "src": "510:14:5",
=======
                      "referencedDeclaration": 434,
                      "src": "426:14:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "487:37:5",
=======
                    "src": "403:37:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "487:37:5"
=======
                  "src": "403:37:4"
>>>>>>> master
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "549:3:5",
=======
                        "src": "465:3:4",
>>>>>>> master
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1596,
                          "src": "554:3:5",
=======
                          "referencedDeclaration": 1227,
                          "src": "470:3:4",
>>>>>>> master
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "554:10:5",
=======
                        "src": "470:10:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 467,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 503,
                        "src": "566:14:5",
=======
                        "referencedDeclaration": 434,
                        "src": "482:14:4",
>>>>>>> master
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 463,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
<<<<<<< HEAD
                      "src": "540:8:5",
=======
                      "src": "456:8:4",
>>>>>>> master
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "540:41:5",
=======
                    "src": "456:41:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "535:46:5"
=======
                  "src": "451:46:4"
>>>>>>> master
                }
              ]
            },
            "documentation": null,
            "id": 471,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "247:12:5",
=======
                  "scope": 471,
                  "src": "163:12:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "247:6:5",
=======
                    "src": "163:6:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "261:14:5",
=======
                  "scope": 471,
                  "src": "177:14:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "261:6:5",
=======
                    "src": "177:6:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 540,
                  "src": "277:22:5",
=======
                  "scope": 471,
                  "src": "193:22:4",
>>>>>>> master
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "277:7:5",
=======
                    "src": "193:7:4",
>>>>>>> master
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "246:54:5"
=======
              "src": "162:54:4"
>>>>>>> master
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "308:0:5"
            },
            "scope": 541,
            "src": "235:354:5",
=======
              "src": "224:0:4"
            },
            "scope": 472,
            "src": "151:354:4",
>>>>>>> master
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 542,
        "src": "94:498:5"
      }
    ],
    "src": "0:592:5"
=======
        "scope": 473,
        "src": "96:412:4"
      }
    ],
    "src": "0:508:4"
>>>>>>> master
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
<<<<<<< HEAD
  "updatedAt": "2018-08-18T12:05:59.055Z"
=======
  "updatedAt": "2018-08-07T11:48:02.584Z"
>>>>>>> master
}